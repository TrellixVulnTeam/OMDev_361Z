<?xml version="1.0"?>
<!DOCTYPE syntax[
	<!ELEMENT syntax (languages_list, completion)>
	<!ELEMENT languages_list (language*)>
	<!ELEMENT language (#PCDATA)>
	<!ELEMENT completion (tag*)>
	<!ELEMENT tag (parent, son*)>
	<!ELEMENT parent (#PCDATA)>
	<!ELEMENT son (lg*)>
	<!ELEMENT lg (menuName, code*)>
	<!ELEMENT menuName (#PCDATA)>
	<!ELEMENT code (#PCDATA)>
]>
<syntax>
  <languages_list>
    <language>Français</language>
    <language>English</language>
  </languages_list>
  <completion>
    <tag>
      <parent>BDC</parent>
      <son>
        <lg>
          <menuName>Déclarer un type</menuName>
          <code>TYPE nom ;</code>
          <code>TYPE nom GR_NOEUD ;</code>
          <code>TYPE nom GR_LIEN ;</code>
          <code>TYPE nom SORTE_DE pere1 pere2 ;</code>
        </lg>
		<lg>
          <menuName>Declare a class</menuName>
          <code>CLASS name ;</code>
          <code>CLASS name GR_NODE ;</code>
          <code>CLASS name GR_LINK ;</code>          
          <code>CLASS name KIND_OF father1 father2 ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer l'ordre des étapes des règles d'interaction</menuName>
          <code>ORDRE_DES_ETAPES  e1;  e2;</code>
          <code>ORDRE_DES_ETAPES  e1 &#13;CONDITION Condition ; &#13;e2;</code>
        </lg>
		<lg>
          <menuName>Declare the order of steps of interaction rules</menuName>
          <code>STEPS_ORDER  s1;  s2;</code>
          <code>STEPS_ORDER  s1 &#13;CONDITION Condition ; &#13;s2;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer les noms des groupes de règles</menuName>
          <code>NOMS_DES_GROUPES  g1 ; g2 ;</code>
        </lg>
		<lg>
          <menuName>Declare the names of rules groups</menuName>
          <code>GROUP_NAMES  g1 ; g2 ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer les noms des systèmes d'équations</menuName>
          <code>NOMS_DES_SYSTEMES  s1 ; s2 ;</code>
        </lg>
		<lg>
          <menuName>Declare the names of equation systems</menuName>
          <code>SYSTEM_NAMES  s1 ; s2 ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer un objet système (objet qui sera présent dans toute étude)</menuName>
          <code>OBJET_SYSTEME objet1 EST_UN nom_de_type ;</code>
        </lg>
		<lg>
          <menuName>Declare a "system object" (object that will be in every study)</menuName>
          <code>SYSTEM_OBJECT object1 IS_A class_name ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Insérer un commentaire</menuName>
          <code>(* ------------------------------------------------------------- *)</code>
          <code>(*  *)</code>
        </lg>
		<lg>
          <menuName>Insert a comment</menuName>
          <code>(* ------------------------------------------------------------- *)</code>
          <code>(*  *)</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>CLASS</parent>
      <son>
        <lg>
          <menuName>Déclarer une interface (ensemble d'objets potentiellement liés à l'objet courant)</menuName>
          <code>INTERFACE &#13;nom &#13;GENRE nom_de_type ;</code>
          <code>INTERFACE &#13;nom &#13;GENRE nom_de_type &#13;CARDINAL 1 ;</code>
          <code>INTERFACE &#13;nom &#13;GENRE nom_de_type &#13;CARDINAL 2 JUSQUA INFINI ;</code>
          <code>INTERFACE &#13;nom &#13;GENRE nom_de_type &#13;CARDINAL 2 JUSQUA INFINI &#13;LIBELLE "libellé" ;</code>
        </lg>
		<lg>
          <menuName>Declare an interface (set of objects potentially linked to the current object)</menuName>
          <code>INTERFACE &#13;name &#13;KIND class_name ;</code>
          <code>INTERFACE &#13;name &#13;KIND class_name &#13;CARDINAL 1 ;</code>
          <code>INTERFACE &#13;name &#13;KIND class_name &#13;CARDINAL 2 TO INFINITY ;</code>
          <code>INTERFACE &#13;name &#13;KIND class_name &#13;CARDINAL 2 TO INFINITY &#13;LABEL "label" ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer une constante (la valeur par défaut est optionnelle)</menuName>
          <code>CONSTANTE &#13;nom &#13;DOMAINE BOOLEEN &#13;PAR_DEFAUT VRAI;</code>
          <code>CONSTANTE &#13;nom &#13;DOMAINE 'val1' 'val2' &#13;PAR_DEFAUT 'val1';</code>
          <code>CONSTANTE &#13;nom &#13;DOMAINE ENTIER &#13;PAR_DEFAUT 0 ;</code>
          <code>CONSTANTE &#13;nom &#13;DOMAINE REEL &#13;PAR_DEFAUT 0.0;</code>
        </lg>
		<lg>
          <menuName>Declare a constant (the default value is optional)</menuName>
          <code>CONSTANT name &#13;DOMAIN BOOLEAN &#13;DEFAULT TRUE;</code>
          <code>CONSTANT name &#13;DOMAIN 'val1' 'val2' &#13;DEFAULT 'val1';</code>
          <code>CONSTANT name &#13;DOMAIN INTEGER &#13;DEFAULT 0 ;</code>
          <code>CONSTANT name &#13;DOMAIN REAL &#13;DEFAULT 0.0;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer un attribut (la valeur par défaut est optionnelle)</menuName>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE BOOLEEN &#13;PAR_DEFAUT VRAI;</code>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE BOOLEEN &#13;REINITIALISATION VRAI;</code>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE 'val1' 'val2' &#13;PAR_DEFAUT 'val1';</code>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE 'val1' 'val2' &#13;REINITIALISATION 'val1';</code>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE ENTIER &#13;PAR_DEFAUT 0 ;</code>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE ENTIER &#13;REINITIALISATION 0 ;</code>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE REEL &#13;PAR_DEFAUT 0.0;</code>
          <code>ATTRIBUT &#13;nom &#13;DOMAINE REEL &#13;REINITIALISATION 0.0;</code>
        </lg>
		<lg>
          <menuName>Declare an attribute (the default value is optional)</menuName>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN BOOLEAN &#13;DEFAULT TRUE;</code>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN BOOLEAN &#13;REINITIALISATION TRUE;</code>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN 'val1' 'val2' &#13;DEFAULT 'val1';</code>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN 'val1' 'val2' &#13;REINITIALISATION 'val1';</code>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN INTEGER &#13;DEFAULT 0 ;</code>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN INTEGER &#13;REINITIALISATION 0 ;</code>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN REAL &#13;DEFAULT 0.0;</code>
          <code>ATTRIBUTE &#13;name &#13;DOMAIN REAL &#13;REINITIALISATION 0.0;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer un effet (attribut booléen réinitialisé à FAUX)</menuName>
          <code>EFFET &#13;nom ;</code>
          <code>EFFET &#13;nom &#13;LIBELLE "effet nom sur l'objet %OBJET";</code>
          <code>EFFET &#13;nom &#13;LIBELLE "effet nom sur l'objet %OBJET" EDITION NON VISIBLE;</code>
        </lg>
		<lg>
          <menuName>Declare an effect (Boolean attribute reinitialized to FALSE)</menuName>
          <code>EFFECT &#13;name ;</code>
          <code>EFFECT &#13;name &#13;LABEL "effect name on object %OBJECT";</code>
          <code>EFFECT &#13;name &#13;LABEL "effect name on object %OBJECT" EDITION NOT VISIBLE;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Déclarer une panne (booléen, éventuellement associé à un modèle de processus élémentaire)</menuName>
          <code>PANNE &#13;nom ;</code>
          <code>PANNE &#13;nom &#13;LIBELLE "panne nom sur l'objet %OBJET" ;</code>
          <code>PANNE &#13;nom &#13;ModeleProcessus ;</code>
        </lg>
		<lg>
          <menuName>Declare a failure (Boolean, may be associated to a model of elementary stochastic process)</menuName>
          <code>FAILURE &#13;name ;</code>
          <code>FAILURE &#13;name &#13;LABEL "failure name on object %OBJECT" ;</code>
          <code>FAILURE &#13;name &#13;ProcessModel ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Règle d'interaction simple</menuName>
          <code>INTERACTION &#13;SI Condition &#13;ALORS ListeActions ;</code>
          <code>INTERACTION &#13;nom_regle &#13;ETAPE nom_etape &#13;SI Condition &#13;ALORS ListeActions ;</code>
          <code>INTERACTION &#13;SI Condition &#13;ALORS ListeActions &#13;SINON AutreListeActions ;</code>
        </lg>
		<lg>
          <menuName>Simple interaction rule</menuName>
          <code>INTERACTION &#13;IF Condition &#13;THEN ActionsList ;</code>
          <code>INTERACTION &#13;rule_name &#13;STEP step_name &#13;IF Condition &#13;THEN ActionsList ;</code>
          <code>INTERACTION &#13;IF Condition &#13;THEN ActionsList &#13;ELSE OtherActionsList ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Règle d'interaction avec toutes ses facettes</menuName>
          <code>INTERACTION &#13;nom_regle &#13;ETAPE e &#13;GROUPE g1 g2 &#13;SOIT x UN Ensemble ET y UN Ensemble VERIFIANT Condition1 &#13;SI Condition2(x,y) &#13;ALORS ListeActions(x,y) ;</code>
        </lg>
		<lg>
          <menuName>Interaction rule with all its slots</menuName>
          <code>INTERACTION &#13;rule_name &#13;STEP s &#13;GROUP g1 g2 &#13;GIVEN x A Set AND y A Set VERIFYING Condition1 &#13;IF Condition2(x,y) &#13;THEN ActionsList(x,y) ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Règle d'occurrence avec événement temporisé</menuName>
          <code>OCCURRENCE &#13;nom_regle &#13;SI Condition &#13;IL_PEUT_SE_PRODUIRE &#13;TRANSITION nom_trans &#13;LOI EXP(Expression) &#13;PROVOQUE ListeActions ;</code>
          <code>OCCURRENCE &#13;nom_regle &#13;IL_PEUT_SE_PRODUIRE &#13;DEFAILLANCE nom_panne &#13;LOI EXP(Expression) ;</code>
          <code>OCCURRENCE &#13;nom_regle &#13;IL_PEUT_SE_PRODUIRE &#13;REPARATION nom_rep &#13;REPARE nom_panne &#13;LOI EXP(Expression) ;</code>
          <code>OCCURRENCE &#13;nom_regle &#13;GROUPE g1 g2 &#13;SI Condition &#13;IL_PEUT_SE_PRODUIRE &#13;TRANSITION nom_trans &#13;LOI EXP(Expression) &#13;PROVOQUE ListeActions ;</code>
        </lg>
		 <lg>
          <menuName>Occurrence rule with delayed event</menuName>
          <code>OCCURRENCE &#13;rule_name &#13;IF Condition &#13;MAY_OCCUR &#13;TRANSITION trans_name &#13;DIST EXP(Expression) &#13;INDUCING ActionsList ;</code>
          <code>OCCURRENCE &#13;rule_name &#13;MAY_OCCUR &#13;FAULT failure_name &#13;DIST EXP(Expression) ;</code>
          <code>OCCURRENCE &#13;rule_name &#13;MAY_OCCUR &#13;REPAIR repair_name &#13;REPAIRS failure_name &#13;DIST EXP(Expression) ;</code>
          <code>OCCURRENCE &#13;rule_name &#13;GROUPE g1 g2 &#13;IF Condition &#13;MAY_OCCUR &#13;TRANSITION trans_name &#13;DIST EXP(Expression) &#13;INDUCING ActionsList ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Règle d'occurrence exprimant un choix instantané</menuName>
          <code>OCCURRENCE &#13;nom_regle &#13;SI Condition &#13;IL_PEUT_SE_PRODUIRE &#13;TRANSITION t1 &#13;LOI INS(Expression) &#13;PROVOQUE ListeActions1 &#13;OU_BIEN &#13;TRANSITION t2 &#13;PROVOQUE ListeActions2  ;</code>
        </lg>
		<lg>
          <menuName>Occurrence rule expressing an instantaneous choice</menuName>
          <code>OCCURRENCE &#13;rule_name &#13;IF Condition &#13;MAY_OCCUR &#13;TRANSITION t1 &#13;DIST INS(Expression) &#13;INDUCING ActionsList1 &#13;OR_ELSE &#13;TRANSITION t2 &#13;INDUCING ActionsList2  ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Equation</menuName>
          <code>EQUATION &#13;nom_equation &#13;SYSTEME_EQUATIONS nom_systeme &#13;SI Condition &#13;FORMULE Expression1 = Expression2 ;</code>
        </lg>
	<lg>
          <menuName>Equation</menuName>
          <code>EQUATION &#13;equation_name &#13;EQUATION_SYSTEM system_name &#13;IF Condition &#13;FORMULA Expression1 = Expression2 ;</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Délimiteurs d'un commentaire formalisé en langage SKOOL</menuName>
          <code>(*&lt;SKOOL&gt;&#13;&lt;/SKOOL&gt;*)</code>
        </lg>
	<lg>
          <menuName>Tags of a formalized comment in the SKOOL language</menuName>
          <code>(*&lt;SKOOL&gt;&#13;&lt;/SKOOL&gt;*)</code>
        </lg>
      </son>
      </tag>
    <tag>
      <parent>INTERFACE</parent>
      <son>
        <lg>
          <menuName>Ajouter une contrainte d'édition/visibilité (par défaut : VISIBLE, MODIFIABLE, NON OBLIGATOIRE)</menuName>
          <code>EDITION NON VISIBLE</code>
          <code>EDITION NON MODIFIABLE</code>
          <code>EDITION OBLIGATOIRE</code>
        </lg>
        <lg>
          <menuName>Add an edition/visibility constraint (default : VISIBLE, MODIFIABLE, NOT MANDATORY)</menuName>
          <code>EDITION NOT VISIBLE</code>
          <code>EDITION NOT MODIFIABLE</code>
          <code>EDITION MANDATORY</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ajouter un libellé</menuName>
          <code>LIBELLE "Ensemble d'objets liés à %OBJET"</code>
        </lg>
        <lg>
          <menuName>Add a label</menuName>
          <code>LABEL "Set of objects linked to %OBJECT"</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>CONSTANT</parent>
      <son>
        <lg>
          <menuName>Ajouter une contrainte d'édition/visibilité (par défaut : VISIBLE, MODIFIABLE, NON OBLIGATOIRE)</menuName>
          <code>EDITION NON VISIBLE</code>
          <code>EDITION NON MODIFIABLE</code>
          <code>EDITION OBLIGATOIRE</code>
        </lg>
        <lg>
          <menuName>Add an edition/visibility constraint (default : VISIBLE, MODIFIABLE, NOT MANDATORY)</menuName>
          <code>EDITION NOT VISIBLE</code>
          <code>EDITION NOT MODIFIABLE</code>
          <code>EDITION MANDATORY</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ajouter un libellé</menuName>
          <code>LIBELLE "Constante de %OBJET"</code>
        </lg>
        <lg>
          <menuName>Add a label</menuName>
          <code>LABEL "Constant of %OBJECT"</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ajouter un rôle (CONCEPTION = non modifiable par variante ni algo objets déduits)</menuName>
          <code>ROLE CONCEPTION</code>
          <code>ROLE PROVISOIRE</code>
        </lg>
        <lg>
          <menuName>Add a role (DESIGN = not modifiable by a variant nor by an algorithm deducing objects)</menuName>
          <code>ROLE DESIGN</code>
          <code>ROLE TEMPORARY</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>ATTRIBUT</parent>
      <son>
        <lg>
          <menuName>Ajouter une contrainte d'édition/visibilité (par défaut : VISIBLE, MODIFIABLE, NON OBLIGATOIRE)</menuName>
          <code>EDITION NON VISIBLE</code>
          <code>EDITION NON MODIFIABLE</code>
          <code>EDITION OBLIGATOIRE</code>
        </lg>
        <lg>
          <menuName>Add an edition/visibility constraint (default : VISIBLE, MODIFIABLE, NOT MANDATORY)</menuName>
          <code>EDITION NOT VISIBLE</code>
          <code>EDITION NOT MODIFIABLE</code>
          <code>EDITION MANDATORY</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ajouter un libellé</menuName>
          <code>LIBELLE "Variable d'état de %OBJET"</code>
        </lg>
        <lg>
          <menuName>Add a label</menuName>
          <code>LABEL "State variable of %OBJECT"</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>EFFECT</parent>
      <son>
        <lg>
          <menuName>Ajouter une contrainte d'édition/visibilité (par défaut : VISIBLE, MODIFIABLE, NON OBLIGATOIRE)</menuName>
          <code>EDITION NON VISIBLE</code>
          <code>EDITION NON MODIFIABLE</code>
          <code>EDITION OBLIGATOIRE</code>
        </lg>
        <lg>
          <menuName>Add an edition/visibility constraint (default : VISIBLE, MODIFIABLE, NOT MANDATORY)</menuName>
          <code>EDITION NOT VISIBLE</code>
          <code>EDITION NOT MODIFIABLE</code>
          <code>EDITION MANDATORY</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>FAILURE</parent>
      <son>
        <lg>
          <menuName>Ajouter une contrainte d'édition/visibilité (par défaut : VISIBLE, MODIFIABLE, NON OBLIGATOIRE)</menuName>
          <code>EDITION NON VISIBLE</code>
          <code>EDITION NON MODIFIABLE</code>
          <code>EDITION OBLIGATOIRE</code>
        </lg>
        <lg>
          <menuName>Add an edition/visibility constraint (default : VISIBLE, MODIFIABLE, NOT MANDATORY)</menuName>
          <code>EDITION NOT VISIBLE</code>
          <code>EDITION NOT MODIFIABLE</code>
          <code>EDITION MANDATORY</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ajouter un modèle de processus élémentaire</menuName>
          <code>DONNEES_FIABILISTES &#13;GROUPE g1 &#13;SI Expression &#13;MODELE_GLM &#13;GAMMA Exp1&#13;  LAMBDA Exp2 &#13;MU Exp3</code>
          <code>DONNEES_FIABILISTES &#13;GROUPE g1 &#13;SI Expression &#13;MODELE_G &#13;GAMMA Exp1</code>
          <code>DONNEES_FIABILISTES &#13;GROUPE g1 &#13;SI Expression &#13;MODELE_WB &#13;ALPHA Exp1&#13;BETA Exp2 &#13;T0 Exp3</code>
        </lg>
        <lg>
          <menuName>Add a model of elementary stochastic process</menuName>
          <code>RELIABILITY_DATA &#13;GROUP g1 &#13;IF Expression &#13;MODEL_GLM &#13;GAMMA Exp1&#13;  LAMBDA Exp2 &#13;MU Exp3</code>
          <code>RELIABILITY_DATA &#13;GROUP g1 &#13;IF Expression &#13;MODEL_G &#13;GAMMA Exp1</code>
          <code>RELIABILITY_DATA &#13;GROUP g1 &#13;IF Expression &#13;MODEL_WB &#13;ALPHA Exp1&#13;  BETA Exp2 &#13;T0 Exp3</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ajouter une liste de processus élémentaires</menuName>
          <code>DONNEES_FIABILISTES &#13;GROUPE g1 &#13;SI Expression &#13;MODELE_PAR_DEFAUT nom_modele ListeModeles</code>
        </lg>
        <lg>
          <menuName>Add a list of elementary stochastic processes</menuName>
          <code>RELIABILITY_DATA &#13;GROUP g1 IF Expression DEFAULT_MODEL model_name ModelsList</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>CONDITION</parent>
      <son>
        <lg>
          <menuName>Ecrire une expression booléenne (combinaison par ET, OU, NON, () )</menuName>
          <code>nom_attribut_booleen</code>
          <code>QQSOIT x EltDunEnsemble ON_A Expression(x)</code>
          <code>IL_EXISTE x EltDunEnsemble TEL_QUE Expression(x)</code>
          <code>IL_EXISTE AU_MOINS Expression1 x INCLUS_DANS Ensemble [VERIFIANT Expression1] TEL_QUE Expression3(x)</code>
          <code>IL_EXISTE AU_MOINS Expression1 x DE_TYPE nom_type [VERIFIANT Expression1] TEL_QUE Expression3(x)</code>
          <code>MARCHE [DE Objet]</code>
          <code>PANNE [DE Objet]</code>
        </lg>
        <lg>
          <menuName>Write a Boolean expression (combine with AND, OR, NOT, () )</menuName>
          <code>Boolean_attribute_name</code>
          <code>FOR_ANY x EltOfASet WE_HAVE Expression(x)</code>
          <code>IT_EXISTS x EltOfASet SUCH_THAT Expression(x)</code>
          <code>IT_EXISTS AT_LEAST Expression1 x INCLUDED_IN Set [VERIFYING Expression1] SUCH_THAT Expression3(x)</code>
          <code>IT_EXISTS AT_LEAST Expression1 x OF_CLASS class_name [VERIFYING Expression1] SUCH_THAT Expression3(x)</code>
          <code>WORKING [OF Object]</code>
          <code>FAILURE [OF Object]</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ecrire une expression de calcul (combinaison par + * - / % ** = &gt; &lt; &gt;= &gt;= () )</menuName>
          <code>nom_attribut_numerique</code>
          <code>SOMME POUR_TOUT x EltDunEnsemble DES_TERMES Expression(x)</code>
          <code>PRODUIT POUR_TOUT x EltDunEnsemble DES_TERMES Expression(x)</code>
          <code>MAXIMUM POUR_TOUT x EltDunEnsemble DES_TERMES Expression(x)</code>
          <code>MINIMUM POUR_TOUT x EltDunEnsemble DES_TERMES Expression(x)</code>
        </lg>
        <lg>
          <menuName>Write a numerical expression (combine with + * - / % ** = &gt; &lt; &gt;= &gt;= () )</menuName>
          <code>numerical_attribute_name</code>
          <code>SUM FOR_ALL x EltOfASet OF_TERMS Expression(x)</code>
          <code>PRODUCT FOR_ALL x EltOfASet OF_TERMS Expression(x)</code>
          <code>MAXIMUM FOR_ALL x EltOfASet OF_TERMS Expression(x)</code>
          <code>MINIMUM FOR_ALL x EltOfASet OF_TERMS Expression(x)</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ecrire un élément d'un ensemble</menuName>
          <code>UN nom_interface [DE_TYPE nom_type] [VERIFIANT Expression]</code>
          <code>UN OBJET DE_TYPE nom_type [VERIFIANT Expression]</code>
        </lg>
        <lg>
          <menuName>Write an element of a set</menuName>
          <code>A interface_name [OF_CLASS class_name] [VERIFYING Expression]</code>
          <code>AN OBJECT OF_CLASS class_name [VERIFYING Expression]</code>
        </lg>
      </son>
      <son>
        <lg>
          <menuName>Ecrire un Ensemble</menuName>
          <code>nom_interface</code>
          <code>nom_interface DE Objet</code>
        </lg>
        <lg>
          <menuName>Write a set</menuName>
          <code>interface_name</code>
          <code>interface_name OF Object</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>THEN</parent>
      <son>
        <lg>
          <menuName>Ecrire une liste d'actions</menuName>
          <code>nom_attribut1 &lt;-- Expression1 , nom_attribut2 DE Objet &lt;-- Expression2  </code>
          <code>POUR_TOUT x EltDunEnsemble FAIRE ListeActions(x)</code>
          <code>( ListeActions )</code>
        </lg>
        <lg>
          <menuName>Write a list of actions</menuName>
          <code>attribute_name1 &lt;-- Expression1 , attribute_name2 OF Object &lt;-- Expression2  </code>
          <code>FOR_ALL x EltOfASet DO ActionsList(x)</code>
          <code>( ActionsList )</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>ELSE</parent>
      <son>
        <lg>
          <menuName>Ecrire une liste d'actions</menuName>
          <code>nom_attribut1 &lt;-- Expression1 , nom_attribut2 DE Objet &lt;-- Expression2  </code>
          <code>POUR_TOUT x EltDunEnsemble FAIRE ListeActions(x)</code>
          <code>( ListeActions )</code>
        </lg>
        <lg>
          <menuName>Write a list of actions</menuName>
          <code>attribute_name1 &lt;-- Expression1 , attribute_name2 OF Object &lt;-- Expression2  </code>
          <code>FOR_ALL x EltOfASet DO ActionsList(x)</code>
          <code>( ActionsList )</code>
        </lg>
      </son>
    </tag>
    <tag>
      <parent>INDUCING</parent>
      <son>
        <lg>
          <menuName>Ecrire une liste d'actions</menuName>
          <code>nom_attribut1 &lt;-- Expression1 , nom_attribut2 DE Objet &lt;-- Expression2  </code>
          <code>POUR_TOUT x EltDunEnsemble FAIRE ListeActions(x)</code>
          <code>( ListeActions )</code>
        </lg>
        <lg>
          <menuName>Write a list of actions</menuName>
          <code>attribute_name1 &lt;-- Expression1 , attribute_name2 OF Object &lt;-- Expression2  </code>
          <code>FOR_ALL x EltOfASet DO ActionsList(x)</code>
          <code>( ActionsList )</code>
        </lg>
      </son>
    </tag>    
  </completion>
</syntax>
